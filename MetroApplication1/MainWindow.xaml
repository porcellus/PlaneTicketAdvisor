<metro:Window
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:metro="http://schemas.codeplex.com/elysium"
              xmlns:params="http://schemas.codeplex.com/elysium/params"
              xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="MetroApplication1.MainWindow"
              params:Design.Theme="Dark"
              params:Design.AccentBrush="{x:Static metro:AccentBrushes.Blue}"
              params:Design.ContrastBrush="White"
              Title="Plane Ticket Advisor" Height="467.718" Width="747.823" Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}">
    <metro:Window.Resources>
        <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Themes:DataGridHeaderBorder>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left">
                                <Thumb.Style>
                                    <Style TargetType="{x:Type Thumb}">
                                        <Setter Property="Width" Value="8"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Cursor" Value="SizeWE"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right">
                                <Thumb.Style>
                                    <Style TargetType="{x:Type Thumb}">
                                        <Setter Property="Width" Value="8"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Cursor" Value="SizeWE"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle1">
            <Setter Property="CaretBrush" Value="White"/>
            <Setter Property="SelectionBrush" Value="#FF848484"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type Control}">
                    <Setter Property="Background" Value="#FF171717"/>
                    <Setter Property="BorderBrush" Value="#FF848484"/>
                    <Setter Property="BorderThickness" Value="{Binding (params:General.SemiBoldThickness), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontSize" Value="{Binding (params:General.TextFontSize), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="FontStretch" Value="Normal"/>
                    <Setter Property="FontStyle" Value="Normal"/>
                    <Setter Property="FontWeight" Value="Normal"/>
                    <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="{Binding (params:General.DefaultPadding), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Control}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ScrollViewer x:Name="PART_ContentHost" Background="Black" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" Margin="{TemplateBinding Padding}" TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}" TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger>
                            <DataTrigger.Binding>
                                <Binding ConverterParameter="18" Mode="OneWay" Path="FontSize" RelativeSource="{RelativeSource Self}">
                                    <Binding.Converter>
                                        <metro:IsGreaterThanConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FF017BCD"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="#FF5C5956"/>
                            <Setter Property="Foreground" Value="#FF5C5956"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                        <Condition Property="IsReadOnly" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="#FF017BCD"/>
                    <Setter Property="Foreground" Value="White"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </metro:Window.Resources>
    <Grid>
        <DataGrid HorizontalAlignment="Left" Margin="22,248,0,0" VerticalAlignment="Top" Height="99" Width="636" Background="#00000000" Foreground="White" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="Honnan" Width="2.5*"/>
                <DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="Hova" Width="2.5*"/>
                <DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="Oda" Width="2.5*"/>
                <DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="Vissza" Width="2.5*"/>
            </DataGrid.Columns>
        </DataGrid>
        <Expander Header="Utazás hozzáadása" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Height="213" Width="714">
            <Grid Background="#FFE5E5E5" Margin="10,0,-10,0">
                <Label Content="" HorizontalAlignment="Right" Height="23" Margin="0,32,538,0" VerticalAlignment="Top" Width="61" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                <TextBox HorizontalAlignment="Left" Height="23" Margin="179,33,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="207" Background="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Style="{DynamicResource TextBoxStyle1}"/>
                <Label Content="Hova&#xA;" HorizontalAlignment="Left" Height="23" Margin="396,32,0,0" VerticalAlignment="Top" Width="61" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                <TextBox HorizontalAlignment="Left" Height="23" Margin="462,33,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="207"/>
                <Label Content="Mikor&#xA;" HorizontalAlignment="Left" Margin="113,60,0,-22" VerticalAlignment="Top" Height="25" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                <Label Content="Vissza&#xA;&#xA;" HorizontalAlignment="Left" Margin="396,61,0,-22" Height="24" VerticalAlignment="Top" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                <Button Content="Button" HorizontalAlignment="Left" Margin="594,90,0,-58" VerticalAlignment="Top" Width="75"/>
                <DatePicker HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="True" Margin="179,65,0,-26" Width="207">
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="VerticalAlignment" Value="Top"/>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
                <DatePicker HorizontalAlignment="Left" Margin="462,61,0,-22" VerticalAlignment="Top" Width="207">
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="VerticalAlignment" Value="Top"/>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
            </Grid>
        </Expander>
    </Grid>
</metro:Window>
